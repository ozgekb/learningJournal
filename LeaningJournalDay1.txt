Learning Journal DAY 1
---------------------------------------------------------------------------------------------
Linux commands:
Pwd--> shows  in which directory are working
cd ~ --> goes home directory
cd.. --> goes previous directory
cd . -->  stays current directory
mkdir --> creates a directory
mv html.txt txt.htm --> changes file name
rm --> removes file
rm -r foo --> removes directory with permission
rm -rf --> remove directory regardless  permission
cp filename ~/Desktop --> copy file to destination
history --> shows command history
history |grep atom --> shows history of specific keyword
ls .. --->shows items of previous directory
mv ../temp.txt ./ --> move temp.txt to (which is in previous directory) current directory
mkdir foo/bar --> create directory foo and  file bar inside the foo directory
ls--> list the items in the current directory
ls -l -->shows all element with their permission and sorts from most recent date to oldest
ls -a --> shows all file even hidden
ls -lrt-->shows all element with their permission and sorts from oldest to most recent date
touch --> create files
man tree --> shows how to use a command
cd --> uses to change directory
which git --> shows  installed directory of git
-------------------------------------------------------------------------------------------
Git and Github

Git is a version control system. When you commit, it take snapshot of your code. It provides
that you can have different version of your code and collaboration with your colleague.
GitHub  provides central repository to you to publish your code and collaborate.

Git Commands

git config --global user.name "ozge kantar" --> configure user name for github
git config --global user.email ozge.kantar@gmail.com --> configure email adress github

git add filename --> adds changed file to commit list
git add* --> adds all changed file to commit list
git status --> shows status of changed files and uncommited files
git commit -m ""--> commit changes to your local repository
git push origin master --> send changes to the master branch from your local repository
git init --> create new local repository
git clone /path/to/repository --> create working copy of local repository
git commit -a --> commits all files to your local repository
git remove -v --> list currently configured remote repository
git checkout -b <branchname>  --> create a new branch and switch to it
git checkout <branchname> -->switch from one branch to another.
git branch --> list all branches in your repo and also shows you which branch are you currently in.
git push --all origin -->push all branches to your remote repository
git push origin :<branchname> --> delete a branch on your remote repository
git merge <branchname> -->merge a diffrent branch into your active branch
git diff --> view all the merge conflict
git standup --> shows last changes
you need to install
npm install -g git -standup
git standup -d 5 --> shows last changes of lasd 5 days
git pull origin master -->take updated remote repository  to your local repo
creating new repository instruction

1- go to  your gitHub account
2- there is a + sign next to your profile icon , click this  "+" sign
3-click create new repository
4- write repository name
5- click  initalize repository with readme
6- chose add license MIT to make your code open.


1- git add files
2- git commit -m ""
3- git push origin master
